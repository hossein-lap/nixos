# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/40204980-be99-4c96-8c21-2c4dc4ce0e9b";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/78F8-CBE6";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/26a00def-01e4-4904-b4b5-b9e0b26e874a";
      fsType = "ext4";
    };

  fileSystems."/var/steam" =
    { device = "/dev/disk/by-uuid/d6137533-9415-4be5-a8d1-724351bff02e";
      fsType = "ext4";
    };

  swapDevices = [ ];

  # # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # # (the default) this is the recommended approach. When using systemd-networkd it's
  # # still possible to use this option, but it's recommended to use it in conjunction
  # # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # # networking.interfaces.enp46s0.useDHCP = lib.mkDefault true;
  # # networking.interfaces.wlp45s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
